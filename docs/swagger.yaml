definitions:
  models.Expense:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      currency:
        type: string
      debtorSubID:
        type: string
      icon:
        type: string
      id:
        type: integer
      note:
        type: string
      payerSubID:
        type: string
      splitType:
        type: string
      status:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.FriendResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      imageURL:
        type: string
      name:
        type: string
      status:
        type: string
      subID:
        type: string
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      imageURL:
        type: string
      name:
        type: string
      subID:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for the Split-It application.
  title: Split-It API
  version: "1.0"
paths:
  /expenses:
    get:
      consumes:
      - application/json
      description: Get user expenses with status
      parameters:
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Expense'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get user expenses with status
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: Create expense
      parameters:
      - description: Expense
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/models.Expense'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create expense
      tags:
      - expenses
  /expenses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete expense
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Update expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      - description: Expense
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/models.Expense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update expense
      tags:
      - expenses
  /friends:
    get:
      consumes:
      - application/json
      description: Get friends
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FriendResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get friends
      tags:
      - friends
  /friends/{subID}:
    delete:
      consumes:
      - application/json
      description: Delete friend
      parameters:
      - description: Friend subID
        in: path
        name: subID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete friend
      tags:
      - friends
    post:
      consumes:
      - application/json
      description: Create friend
      parameters:
      - description: Friend subID
        in: path
        name: subID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create friend
      tags:
      - friends
  /users:
    get:
      consumes:
      - application/json
      description: Get user details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
  /users/{name}:
    get:
      consumes:
      - application/json
      description: Get users by name
      parameters:
      - description: User name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get users by name
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
